{"name":"C++ Templates for Hash Array Mapped Trie","tagline":"Hash Array Mapped Trie (C++ Templates)","body":"C++ Template class implementation of Hash Array Mapped Trie\r\n================================\r\n\r\nDo you want space-efficient and fast hash table? HAMT is just here for you. Based on the paper [Ideal Hash Trees by Phil Bagwell](http://lampwww.epfl.ch/papers/idealhashtrees.pdf), and as the title stated, it has really ideal features as a hash table as below.\r\n\r\nFeatures\r\n-------------------------\r\n * No initial root hash table required.\r\n   _(Empty hash table just takes 8 bytes in 32 bit build or 12 bytes in 64 bit build.)_\r\n * No stop the world rehashing.\r\n * Faster and smaller.\r\n * Constant add/delete O(1) operations\r\n * C++ Template implementation can be easily used to any data type.\r\n * 32 bit hash key and 32 bit bitmap to index subhash array.\r\n * 32 bit integer and string (ANSI and Unicode) hash key templates are included.\r\n * Expected tree depth: ![equation](http://latex.codecogs.com/gif.latex?O%28%5Clog_%7B2%5EW%7D%28n%29%29).  \r\n     w = 5  \r\n     n : number of elements stored in the trie\r\n * Hamming weight of bitmap can be caculated using POPCNT(Population count) CPU intruction (introduced in Nehalem-base and Barcelona microarchitecture CPU). POPCNT can speed up overall performance about 10%.\r\n\r\nTest program build notes\r\n-------------------------\r\n * Open and compile Test\\IdealHash.sln\r\n * To enable POPCNT CPU instruction, change 0 to 1 in \"#define SSE42_POPCNT 0\". POPCNT is SSE4 CPU instruction start supported since Intel Nehalem and AMD Barcelona.\r\n * References on POPCNT:\r\n    - http://en.wikipedia.org/wiki/SSE4#POPCNT_and_LZCNT\r\n    - http://developer.amd.com/community/blog/barcelona-processor-feature-advanced-bit-manipulation-abm/\r\n\r\nMore information\r\n-------------------------\r\n * [Ideal Hash Trees by Phil Bagwell](http://lampwww.epfl.ch/papers/idealhashtrees.pdf).\r\n * [Wikipedia on Hash array mapped trie](http://en.wikipedia.org/wiki/Hash_array_mapped_trie).\r\n * [Ideal Hash Tries: an implementation in C++](http://www.altdevblogaday.com/2011/03/22/ideal-hash-tries-an-implementation-in-c/).\r\n * [POPCNT Instruction](http://en.wikipedia.org/wiki/SSE4#POPCNT_and_LZCNT)\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}